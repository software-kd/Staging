@using Alphareds.Module.Common;
@using Alphareds.Module.Model;
@using Alphareds.Module.Model.Database;
@model Alphareds.Module.Model.CrossSellItemsAvailable.EventProductInformation

@{
    string tripid = ViewBag.tripid ?? Request.QueryString["tripid"];
    string affiliationId = Request.QueryString["affiliationId"];

    var eventTypeGrp = Model.HeaderInfo.GroupBy(x => new { x.EventTypeCode, x.EventType });
    var productTypeGrp = Model.DetailsInfo.GroupBy(x => x.EventTypeCode);    
}

@foreach (var eventType in eventTypeGrp.OrderByDescending(x => x.Key.EventTypeCode == "CT"))
{
    int totalItem = 0;
    string _icon = $"~/Images/ico/{eventType.Key.EventTypeCode.Trim()}.png";

    if (!File.Exists(Server.MapPath(_icon)))
    {
        _icon = "~/Images/ico/wf.png";
    }

    <div class="item-container @eventType.Key.EventTypeCode">
        @Html.Hidden(eventType.Key.EventTypeCode, null, new { @class = "token event-product " + (eventType.Key.EventTypeCode == "CT" || eventType.Key.EventTypeCode == "GT" || eventType.Key.EventTypeCode == "TH" ? "" : "etc")})
        <div class="clearfix row"></div>

        <div class="container4">
            <div class="section-BRD section-concert" style="margin-bottom: 10px;">
                <h3 class="box-heading blue-bg">
                    <span class="addon-ico">
                        <img src="@Url.Content(_icon)" />
                    </span>
                    <span class="addon-title">@eventType.Key.EventType</span>
                </h3>

                @if (false && eventType.Key.EventTypeCode == "CR")
                {
                    @* Hide First, Due to Only 1 types Car *@
                    <div class="addon-car-bg">
                        <img src="/Images/addon-bg/cars.jpg">
                    </div>
                }

                <div class="collapse in @eventType.Key.EventTypeCode">

                    @{
                        int eventTypeCounter = eventType.Count();
                        int dtPickerPosition = 0;
                    }
                    <div id="ticket_desk" class="addon-container container_BRD_desktop @(eventType.Key.EventTypeCode == "CR" ? "only-last" : "")" @(eventTypeCounter >= 3 ? "style='text-align: center;'" : "")>
                        @foreach (var headerInfo in eventType)
                        {
                            bool onlyOneRecord = eventTypeCounter == 1;
                            string identifyClass = string.Format("{0}_{1}", headerInfo.EventTypeCode, headerInfo.EventID);
                            string bannerSrcServerPath = Server.MapPath(headerInfo.EventImageWeb);
                            string sqServerFilePath = "";
                            string sqBannerSrcServerPath = "";
                            var ticketDetails = Model.DetailsInfo.Where(x => x.EventID == headerInfo.EventID);
                            bool isAnyItemHas = ticketDetails.Any(x => x.TicketBalance > 0);
                            string bundleTWAnountText = headerInfo.BundleTWPrice != 0 ? "+" + headerInfo.BundleTWPrice.ToString("n2") + " Travel Wallet": "" ;
                            try
                            {
                                string fileExtension = Path.GetExtension(headerInfo.EventImageWeb);
                                string fileName = Path.GetFileName(headerInfo.EventImageWeb);
                                sqServerFilePath = bannerSrcServerPath.Replace(fileName, fileName.Replace(fileExtension, "_sq" + fileExtension));
                                sqBannerSrcServerPath = headerInfo.EventImageWeb.Replace(fileName, fileName.Replace(fileExtension, "_sq" + fileExtension));
                            }
                            catch (Exception ex)
                            {
                                System.Diagnostics.Debug.Write(ex);
                            }

                            string bannerSrc = File.Exists(sqServerFilePath) ? Url.Content(sqBannerSrcServerPath) : (File.Exists(bannerSrcServerPath) ? Url.Content(headerInfo.EventImageWeb) : Url.Content("~/Images/no-img-01.jpg"));
                            if (onlyOneRecord)
                            {
                                bannerSrc = File.Exists(bannerSrcServerPath) ? Url.Content(headerInfo.EventImageWeb) : bannerSrc;
                            }

                            if (eventType.Key.EventTypeCode == "CT" || eventType.Key.EventTypeCode == "GT" || eventType.Key.EventTypeCode == "TH")
                            {
                                <div class="col1_BRD @(onlyOneRecord ? "fullw-banner" : "")">
                                    <div class="BRD-box1 openPopOut">

                                        <div class="ct-itemwrapper">
                                            <div class="poster-wrapper">
                                                <div class="BRD-image">
                                                    <img class="popOut" data-sdate="@headerInfo.EventStartDate" data-edate="@headerInfo.EventEndDate" data-id="@headerInfo.EventID" src="@bannerSrc" />
                                                </div>
                                                @if (eventType.Key.EventTypeCode == "CT" || eventType.Key.EventTypeCode == "GT" || eventType.Key.EventTypeCode == "TH")
                                                {
                                                    <div class="addon-cr-title">
                                                        <div style="vertical-align: middle;display: inline-block;">
                                                            <div style="line-height: 0">
                                                                <span><img class="addon-cr-inf" data-sdate="@headerInfo.EventStartDate" data-edate="@headerInfo.EventEndDate" data-id="@headerInfo.EventID" src="~/Images/ico/info-ico.png" /></span>
                                                                <span class="add-cr-subtitle">@headerInfo.EventName @bundleTWAnountText</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>

                                            <div class="ticket_select" data-box="@(identifyClass)" data-type="@eventType.Key.EventTypeCode.Trim()">
                                                <label>Select Ticket</label>
                                            </div>

                                            @GenerateConcertTicketType(headerInfo, ticketDetails, eventType.Key.EventTypeCode, dtPickerPosition++, totalItem, true, onlyOneRecord)
                                        </div>

                                    </div>
                                </div>
                            }
                            else
                            {
                                @GenerateEtcProduct(headerInfo, ticketDetails, bannerSrc)
                            }

                            totalItem++;
                            dtPickerPosition = 0; // reset sequences
                            if (onlyOneRecord || (totalItem > 3 && (totalItem % 3 == 0)))
                            {
                                <div class="clear"></div>
                            }
                        }

                        @* Desktop Usage *@
                        @foreach (var headerInfo in eventType)
                        {
                            var ticketDetails = Model.DetailsInfo.Where(x => x.EventID == headerInfo.EventID);
                            @GenerateConcertTicketType(headerInfo, ticketDetails, eventType.Key.EventTypeCode, dtPickerPosition++, totalItem, false, eventType.Count() == 1)
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
                        }

@helper GenerateTaxInclusiveLabel()
{
    <div class="ev-tax-lbl" style="font-style: italic;color: #22a5da;font-size: 10px;">per ticket (tax inclusive)</div>
}

@helper GenerateConcertTicketType(usp_EventMasterSelect_Result headerInfo, IEnumerable<usp_EventProductSelect_Result> ticketDetails, string eventType,
    int dtPickerPosition, int totalItem, bool isMobile, bool onlyOneRecord)
{
bool gotTicket = false;
string identifyClass = string.Format("{0}_{1}", headerInfo.EventTypeCode, headerInfo.EventID);
DateTime? firstDetailDate = null;
//var ttlDays = headerInfo.EventEndDate.Date.Subtract(headerInfo.EventStartDate.Date).TotalDays + 1;

    <div class="@(isMobile ? "hide-desk" : "hide-mob")">
        <div class="clear"></div>
        <div class="concert_container ticket_list ticket_hide openPopOut hide"
             data-box="@(identifyClass)" data-type="@eventType.Trim()">
            <div class="col3_BRD @(onlyOneRecord ? "fullw-banner" : "")">
                <div class="desk_dtWrapper dtWrapper @PositionDtPicker(dtPickerPosition)">
                    @*Select Date*@
                    <select id="tk_date">
                        @foreach (var detailDate in ticketDetails.Select(x => x.EventDate).Distinct().ToList())
                        {
                            firstDetailDate = firstDetailDate ?? detailDate.Date;
                            string soldOut = ""; // ticketDetails.Any(x => x.EventDate == detailDate && x.TicketBalance > 0) ? "" : "- Sold Out";
                            <option value="@detailDate.Date.ToString("dd-MM-yyyy")">@detailDate.Date.ToString("dd MMM yyyy") @soldOut</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col4_BRD">
                <div class="col4_BRD_left">
                    @foreach (Alphareds.Module.Model.Database.usp_EventProductSelect_Result detailInfo in ticketDetails.OrderByDescending(x=>x.TicketCategory.Contains("MyKad")).ThenBy(x=>x.EventProductID))
                    {
                        int ticketSelectCounter = 0;

                        var eventselected = "date_" + detailInfo.EventDate.ToString("ddMMyyyy");
                        var showevent = detailInfo.EventDate.Date == firstDetailDate ? "" : "hidden";
                        <div class="col4_BRD_list @eventselected @showevent">
                            <div class="BRD_list_col1"> <span class="ev-cat-title">@detailInfo.TicketCategory</span></div>
                            <div class="BRD_list_col2">
                                +MYR <label class="ev-price">@detailInfo.FrontEndTicketPrice.ToString("n2")</label>
                                @GenerateTaxInclusiveLabel()
                            </div>
                            <div class="BRD_list_col3">
                                @if (detailInfo.TicketBalance > 0)
                                {
                                    gotTicket = true;
                                    @:Qty &nbsp;&nbsp;
                                    <select class="tk_type_selector" data-cat="@detailInfo.TicketCategoryCode" data-catname="@detailInfo.TicketCategory" data-tick="@detailInfo.EventProductID" data-price="@detailInfo.FrontEndTicketPrice">
                                        @for (int i = 0; i <= detailInfo.TicketBalance; i++)
                                        {
                                            /* BRD 2.1.3 - System
                                                * The total number of tickets a booking transaction is allowed to purchase(Step 2.5) should be less than or equal to the number of pax(adult + child) set during the search criteria(Step 1).
                                            */
                                            <option>@i</option>
                                            ticketSelectCounter++;
                                            if (ticketSelectCounter > headerInfo.TotalQtyAcceptable || i >= 10)
                                            {
                                                break;
                                            }
                                        }
                                    </select>
                                    if (detailInfo.TicketBalance <= 1)
                                    {
                                        <span style="color: #ff0000;font-size: 9px;vertical-align: middle;font-style: italic;">LAST UNIT</span>
                                    }
                                }
                                else
                                {
                                    <span style="color: #ff0000;vertical-align: middle;font-style: italic;">Sold Out</span>
                                }
                            </div>
                        </div>
                    }
                </div>

                <div class="col4_BRD_right">
                    
                    <div class="btn-container">
                        @if (headerInfo.BundleTWPrice > 0)
                        {
                            <div>+MYR @headerInfo.BundleTWPrice.ToString("n2") Travel Wallet</div>
                        }
                        @if (gotTicket)
                        {
                            <button class="tic_select_btn btn btn-select btn-red" type="button" data-cc="@headerInfo.TotalQtyAcceptable"
                                    data-type="@headerInfo.EventTypeCode" data-name="@headerInfo.EventName" data-master="@headerInfo.EventID">
                                Select
                            </button>
                        }
                    </div>
                </div>
                <div class="clear"></div>
            </div>
        </div>

        @if (totalItem == eventType.Count())
        {
            <div class="clear"></div>
        }
    </div>
}

@helper GenerateEtcProduct(usp_EventMasterSelect_Result headerInfo, IEnumerable<usp_EventProductSelect_Result> ticketDetails, string img)
{
var dateList = ticketDetails.Where(s => s.EventDate >= Model.SearchInfo.DateFrom.Value &&
((Model.SearchInfo.DateFrom == null && s.EventDate <= Model.SearchInfo.DateFrom.Value) || (Model.SearchInfo.DateTo != null || s.EventDate <= Model.SearchInfo.DateTo.Value)));
string eventTypeCode = headerInfo.EventTypeCode.ToLower();
int dtCount = dateList.Count();
dtCount = dtCount <= 0 ? 1 : dtCount;
var dataAction = Html.Raw(string.Format("data-sdate='{0}' data-edate='{1}' data-id='{2}'", Model.SearchInfo.DateFrom, Model.SearchInfo.DateTo, headerInfo.EventID));

    
string joinCat = string.Join(",", ticketDetails.Select(x => x.TicketCategoryCode).Distinct());
string joinProductId = string.Join(",", ticketDetails.Select(x => x.EventProductID));
var evDtl = ticketDetails.FirstOrDefault();
DateTime dtEv = evDtl != null ? evDtl.EventDate : Model.SearchInfo.DateFrom.Value;
int ticketSelectCounter = 0;
int singleRecordBalance = evDtl != null ? evDtl.TicketBalance : headerInfo.TotalQtyAcceptable;
    
    <div class="addon-etc">
        <div class="content-left">
            <a href="javascript:;" class="popOut" @dataAction><img class="img-responsive" src="@(img)" /></a>
        </div>
        <div class="content-right">
            <div class="etc-detail">
                <div class="block-lf">
                    <div class="title">
                        <div class="t-ico">
                            <a href="javascript:;" class="popOut" @dataAction><img class="addon-cr-inf" src="~/Images/ico/info-ico.png" /></a>
                        </div>
                        <div class="add-cr-subtitle">
                            @headerInfo.EventName
                            <div class="etc-desc">
                                <a href="javascript:;" class="popOut" @dataAction>@headerInfo.EventDesc</a>
                                @*<i>More Info</i>*@
                            </div>
                            @if (eventTypeCode == "cr")
                            {
                                <p class="tc-link">* I confirm I have read, understood and accepted the
                                    <a href="@Url.RouteUrl("RenderWebPDF", new { filetype = "addon", file = "21042017_terms_conditions_for_rental_agreement" })" target="_blank">Terms &amp; Conditions</a>.
                                </p>
                            }
                            @if (Core.IsForStaging && dateList.Count() == 0 && eventTypeCode != "th")
                            {
                                <small style="font-style:italic;color: red">
                                    EventMgt.usp_EventProductSelect result mismatch with EventMgt.usp_EventMasterSelect returned result, unexpected error might occur.
                                </small>
                            }
                        </div>
                    </div>
                </div>
                <div class="block-rg">
                    @if ((eventTypeCode == "th" || eventTypeCode == "wf" || eventTypeCode == "cr") && singleRecordBalance <= 0)
                    {
                        <span style="color: #ff0000;vertical-align: middle;font-style: italic;">SOLD OUT</span>
                    }
                    else
                    {
                        <div class="desc-price">
                            <div class="p-wrapper">
                                <div class="cur">+ MYR</div>
                                <div class="rate" id="PriceRate-@eventTypeCode" data-value="@(eventTypeCode == "wf" ? (ticketDetails.Average(s => s.FrontEndTicketPrice)).ToString("n2") : "")">
                                    @if (eventTypeCode == "cr" || eventTypeCode == "wf")
                                    {
                                        @((ticketDetails.Average(s => s.FrontEndTicketPrice)).ToString("n2"))
                                    }
                                    else if (eventTypeCode == "th")
                                    {
                                        @(ticketDetails.Sum(s => s.FrontEndTicketPrice).ToString("n2"))
                                    }
                                    else
                                    {
                                        @((dateList.Sum(s => s.FrontEndTicketPrice) / dtCount).ToString("n2"))
                                    }
                                </div>
                            </div>
                            <span class="p-subdesc">
                                @if (eventTypeCode == "wf" || eventTypeCode == "dr")
                                {
                                    @:per pax
                                }
                                else if(eventTypeCode == "cr")
                                {
                                    @:per car
                                }
                                else if(eventTypeCode == "th")
                                {
                                    @:per set
                                }
                                else
                                {
                                    @*@:per day*@
                                }
                            </span>
                        </div>

                        <div class="etc-selection">
                            <select class="etc-select-opt" id="@eventTypeCode.Trim().ToUpper()-select"
                                    data-type="@eventTypeCode.Trim().ToUpper()" data-name="@headerInfo.EventName" data-master="@headerInfo.EventID"
                                    data-cat="@joinCat" data-tick="@joinProductId" data-dt="@dtEv.ToString("dd-MM-yyyy")">
                                @switch (eventTypeCode)
                                {
                                    case "cr":
                                        for (int i = 0; i <= Math.Ceiling((decimal)headerInfo.TotalQtyAcceptable / 4); i++)
                                        {
                                            <option value="@i">@i</option>
                                        }
                                        break;
                                    case "wf":
                                        for (int i = 0; i <= singleRecordBalance; i++)
                                        {
                                            <option value="@i">@i</option>
                                            ticketSelectCounter++;
                                            if (ticketSelectCounter > headerInfo.TotalQtyAcceptable)
                                            {
                                                break;
                                            }
                                        }
                                        break;
                                    case "th":
                                        for (int i = 0; i <= singleRecordBalance; i++)
                                        {
                                            <option value="@i">@i</option>
                                            ticketSelectCounter++;
                                            if (ticketSelectCounter > headerInfo.TotalQtyAcceptable)
                                            {
                                                break;
                                            }
                                        }
                                        break;
                                    default:
                                        for (int i = 0; i <= singleRecordBalance; i++)
                                        {
                                            <option value="@i">@i</option>
                                            ticketSelectCounter++;
                                            if (ticketSelectCounter > headerInfo.TotalQtyAcceptable)
                                            {
                                                break;
                                            }
                                        }
                                        @*int dayCount = 1;
                                        <option>0</option>
                                        foreach (var item in dateList)
                                        {
                                            <option value="@item.EventDate.ToString("dd-MM-yyyy")">@(dayCount++)</option>
                                        }*@
                                        break;
                                }
                            </select><div class="p-subdesc-s">
                                @if ((eventTypeCode == "th" || eventTypeCode == "wf" || eventTypeCode == "cr") && singleRecordBalance <= 1)
                                {
                                    <span style="color: #ff0000;font-size: 9px;vertical-align: middle;font-style: italic;">LAST UNIT</span>
                                }
                                else
                                {
                                    @:No.Unit
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@functions{
    string PositionDtPicker(int positionCounter)
    {
        switch (positionCounter)
        {
            case 0:
                return "pleft";
            case 1:
                return "pcenter";
            case 2:
                return "pright";
            default:
                return "pcenter";
        }
    }
}